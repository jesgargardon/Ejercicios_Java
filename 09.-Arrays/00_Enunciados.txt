09-01_MediaValoresArray
---------------------
Escribe un programa que dibuje por pantalla la media de los valores de un array de enteros (tipo int)
El array se proporciona hardcodeado en el método main, pero el programa tiene que funcionar para cualquier
longitud del array (si añadimos o eliminamos elementos del array el programa tiene que seguir funcionando)
El resultado no puede ser aproximado a entero, sino que tendrá decimales si no es entero

09-02_ValorMayorMenorEnArray
----------------------------
Escribe un programa que dibuje por pantalla el número mayor y el número menor de un array de enteros (tipo int).
El array se proporciona hardcodeado en el método main, pero el programa tiene que funcionar para cualquier
longitud del array (si añadimos o eliminamos elementos del array el programa tiene que seguir funcionando).

09-03_VariosValoresArrayEnteros
-------------------------------
Dado un array de números enteros llamado numeros, que estará hardcodeado en el método main.
Realizar un programa que presente por pantalla la siguiente información:
1.- número de elementos del array
2.- el número más alto del array
3.- el número más bajo del array
4.- la suma de todos los elementos del array
NOTA: El programa tiene que funcionar si añadimos o eliminamos más números al array

09-04_ImparesPosicionArray
-------------------------
Escribe un programa que dibuje por pantalla los valores impares de un array de enteros (tipo int) y su posición
en el array. Por ejemplo, si para el indice 1 tenemos el valor 5, el programa debería escribir:
"El valor 5 es impar y ocupa la posición 2 en el array".(recuerda que el indice de un array comienza en 0)
El array se proporciona hardcodeado en el método main, pero el programa tiene que funcionar para cualquier
longitud del array (si añadimos o eliminamos elementos del array el programa tiene que seguir funcionando)

09-05_ArrayClasePersonaEstudiante
--------------------------------
- Crea una Clase Persona que tenga como parametros el nombre y el año de nacimiento. Además tendra un método
que calcule la edad de la Persona mediante la resta del año actual y el año de nacimiento. El año actual se
pasa como parámetro al método.
- Crea una Clase Estudiante que herede de Persona y que tenga un parámetro que indique la carrera que estudia el estudiante.
Además, tendrá un método que dibuje por pantalla todos los datos del Estudiante, también los heredados.
- En el programa principal, pide al usuario que introduzca los datos de tres estudiantes. Crea un array de estudiantes y
almacena los tres estudiantes introducidos por el usuario en el array. Finalmente, pinta por pantalla los datos de los tres estudiantes.

09-06_NumerosDivisiblesPor3DentroArray
-------------------------------------
Crea un programa que pinte por pantalla los números impares del array numeros declarado e inicializado en el método main
El programa tiene que funcionar si cambiaramos los valores del array o añadieramos o quitaramos valores

09-07_ManejandoUCIs
------------------
Crea una clase llamada Habitacion que tenga los siguientes parámetros:
•	numeroHabitación (tipo integer y privado): indicará el número de habitación.
•	numeroPlanta (tipo integer y privado): indicará en que planta del hospital está la habitación.
•	libre (tipo Boolean y privado): indicará si la habitación está libre y puede por tanto ser ocupada.
La clase Habitacion tendrá un constructor que acepte todos los parámetros.

Por otro lado, crearemos la clase UCI que hereda de la clase Habitacion, que será la superclase.
La clase UCI tendrá las siguientes características:
•	Tiene dos parámetros adicionales:
1.	sanitario (tipo String): Nombre del sanitario al cargo de la UCI.
2.	paciente: Paciente que ocupa la UCI.
•	Tiene que tener un constructor que acepte todos los parámetros, incluidos los que hereda de la superclase.
•	Tiene que tener un método llamado dibujarDatos que dibuja por pantalla todos los datos de un objeto UCI.

Y en nuestra clase con el método main, programaremos las siguientes acciones:
•	Tienes que crear un array de 5 objetos UCI.
•	Inicializa los 5 elementos del array a un valor. Esta parte puede estar hardcodeada.
•	Una vez inicializadas las UCI, muestra por pantalla el estado de todas ellas.
•	Después debes pedir al usuario que introduzca por teclado el nombre de un nuevo paciente.
•	Si hay al menos una UCI libre, tienes que colocar al paciente en dicha UCI y mostrar por pantalla el estado actualizado de las UCIs, y el programa termina su ejecución.
•	Si todas las UCIs estuvieran ocupadas, tienes que indicarlo, decir que no tienes una UCI libre donde colocar al nuevo paciente y finalizar el programa.

