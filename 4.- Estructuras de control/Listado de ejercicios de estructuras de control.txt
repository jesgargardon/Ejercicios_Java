4_1.-AcertarNumero
-------------------
Realiza un programa en el que el usuario tendrá que acertar un número entre 1 y 1000. Dicho número está hardcodeado en la variable valor.
El usuario tiene que introducir un número entre 1 y 1000 por teclado. No es necesario comprobar que el usuario introduce el número correctamente.
El número de intentos para acertar es ilimitado, y el programa seguirá pidiéndole al usuario que introduzca un número hasta que este acierte. Sólo en esa situación el programa termina.
Tras cada introducción, el programa tiene que indicar los intentos que lleva el usuario y si el número introducido es mayor o menor que el valor que hay que acertar.
Cuando se acierte, se presenta un texto diciendo que se ha acertado y el número de intentos que se han necesitado.

4_2.-IntroduccionNombresAlumnos
------------------------------
Realiza un programa que pida al usuario que introduzca por teclado el número de alumnos en clase.
Usando el número introducido por el usuario, el programa pedirá al usuario que 
introduzca los nombres de los alumnos.
Ten en cuenta que el programa tiene que pedir tantas introducciones de nombres, 
como alumnos haya en clase. Una vez introducidos todos los nombres de los alumnos
el programa termina presentando el mensaje: 
"Han sido introducidos los nombres de <número de alumnos> alumnos"
Lógicamente, en <número de alumnos> tienes que presentar el valor numérico del número de alumnos.
Y presentar por pantalla, la lista de los nombres de los alumnos, uno por línea.

4_3.-DivisoresExactos
---------------------
Codifica un programa que pida al usuario que introduzca un número entre 1 y 1000, 
e imprima todos los divisores exactos de ese número.
Por ejemplo, si el número introducido por el usuario fuera 170, el resultado debería ser algo similar a:
Por favor, introduce un numero entre 1 y 1000
170
El numero 170 es divisible por 1
El numero 170 es divisible por 2
El numero 170 es divisible por 5
El numero 170 es divisible por 10
El numero 170 es divisible por 17
El numero 170 es divisible por 34
El numero 170 es divisible por 85
El numero 170 es divisible por 170

4_4.-IntroducirNuevaContraseña
------------------------------
Codificar un programa Java que solicita al usuario la introducción de una nueva contraseña.
Para ser segura, la contraseña debe tener más de 7 caracteres. 
Si la longitud de la nueva contraseña es inferior a ocho, debe solicitar de nuevo al usuario
que introduzca una nueva contraseña con más de siete caracteres. (Nótese que 7 caracteres no es suficiente).
Una vez introducida la nueva contraseña, se pide al usuario que la introduzca de nuevo.
A continuación, el programa comprueba si la contraseña introducida es la misma que
la nueva contraseña introducida la primera vez por el usuario. 
Si ambos son iguales, imprima un mensaje en la pantalla que diga: "Su contraseña se ha cambiado con exito". 
Si ambos son diferentes se vuelve a pedir al usuario que introduzca de nuevo la segunda contraseña. 
El usuario tiene 3 intentos para introducir la contraseña igual a la nueva contraseña introducida al principio. 
Si el usuario falla todos los intentos, debe imprimir un mensaje en la pantalla que diga: 
"Lo sentimos, ha superado el número de intentos para cambiar la contraseña. Inténtelo de nuevo después de 5 minutos"
y finaliza el programa.

4_5.-IntroducirNotasExamen
--------------------------
Realiza un programa para introducir las notas de un examen.
El usuario del programa tiene que indicar el número de alumnos que se han
presentado al examen.
Posteriormente el usuario tendrá que introducir las notas obtenidas de todos
los alumnos, no será necesario introducir el nombre del alumno, solamente la nota
El programa tiene que presentar por pantalla, el número de alumnos aprobados (que 
han obtenido un 5 o superior), el número de alumnos suspendidos (nota inferior a
5) y la media de las notas.
NOTA: Por simplificar, se puede asumir que las notas son enteros, no hay decimales

4-6.-AcertarEdadUsuario
-----------------------
Realiza un programa que pregunte a un usuario su edad.
Entonces, otro usuario tendrá que acertar la edad del primero.
Para ello, el programa pregunta al segundo usuario la edad del primero
de manera indefinida hasta que lo acierte, sin límites de intentos.
Tras cada introducción, el programa tiene que indicar si el número introducido
es mayor o menor que la edad del primer usuario.
Cuando se acierte, se presenta un texto diciendo que se ha acertado y
el número de intentos que se han necesitado.

4_7.-NumerosDivisiblePor33
--------------------------
Empleando un bucle for, dibuja por pantalla todos los números entre el 1 y el 1000 que son disivibles por 33.
Tras mostrar los números divisible por 33, indicar tambien por pantalla cuantos números son.



